{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\DELL\\\\Downloads\\\\React Projects\\\\React-Player\\\\React-Hooks-StarterFiles 4\\\\react-hooks-videoplayer-FINISHED\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\DELL\\\\Downloads\\\\React Projects\\\\React-Player\\\\React-Hooks-StarterFiles 4\\\\react-hooks-videoplayer-FINISHED\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\DELL\\\\Downloads\\\\React Projects\\\\React-Player\\\\React-Hooks-StarterFiles 4\\\\react-hooks-videoplayer-FINISHED\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Downloads\\\\React Projects\\\\React-Player\\\\React-Hooks-StarterFiles 4\\\\react-hooks-videoplayer-FINISHED\\\\src\\\\components\\\\containers\\\\WbnPlayer.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport Video from '../Video';\nimport Playlist from '../containers/Playlist';\nimport StyledWbnPlayer from '../styles/StyledWbnPlayer';\nvar theme = {\n  bgcolor: '#353535',\n  bgcolorItem: '#414141',\n  bgcolorItemActive: '#405c63',\n  bgcolorPlayed: '#526d4e',\n  border: 'none',\n  borderPlayed: 'none',\n  color: '#fff'\n};\nvar themeLight = {\n  bgcolor: '#fff',\n  bgcolorItem: '#fff',\n  bgcolorItemActive: '#80a7b1',\n  bgcolorPlayed: '#7d9979',\n  border: '1px solid #353535',\n  borderPlayed: 'none',\n  color: '#353535'\n};\n\nvar WbnPlayer = function WbnPlayer(props) {\n  var videos = JSON.parse(document.querySelector('[name=\"videos\"]').value);\n  var savedState = JSON.parse(localStorage.getItem(\"\".concat(videos.playlistId)));\n\n  var _useState = useState({\n    videos: savedState ? savedState.videos : videos.playlist,\n    activeVideo: savedState ? savedState.activeVideo : videos.playlist[0],\n    nightMode: savedState ? savedState.nightMode : true,\n    playlistId: savedState ? savedState.playlistId : videos.playlistId,\n    autoplay: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  useEffect(function () {\n    localStorage.setItem(\"\".concat(state.playlistId), JSON.stringify(_objectSpread({}, state)));\n  }, [state]);\n  useEffect(function () {\n    console.log('test');\n    var videoId = props.match.params.activeVideo;\n\n    if (videoId !== undefined) {\n      var newActiveVideo = state.videos.findIndex(function (video) {\n        return video.id === videoId;\n      });\n      setState(function (prev) {\n        return _objectSpread({}, prev, {\n          activeVideo: prev.videos[newActiveVideo],\n          autoplay: props.location.autoplay\n        });\n      });\n    } else {\n      props.history.push({\n        pathname: \"/\".concat(state.activeVideo.id),\n        autoplay: false\n      });\n    }\n  }, [props.history, props.location.autoplay, props.match.params.activeVideo, state.activeVideo.id, state.videos]);\n\n  var nightModeCallback = function nightModeCallback() {\n    setState(function (prevState) {\n      return _objectSpread({}, prevState, {\n        nightMode: !prevState.nightMode\n      });\n    });\n  };\n\n  var endCallback = function endCallback() {\n    var videoId = props.match.params.activeVideo;\n    var currentVideoIndex = state.videos.findIndex(function (video) {\n      return video.id === videoId;\n    });\n    var nextVideo = currentVideoIndex === state.videos.length - 1 ? 0 : currentVideoIndex + 1;\n    props.history.push({\n      pathname: \"\".concat(state.videos[nextVideo].id),\n      autoplay: false\n    });\n  };\n\n  var progressCallback = function progressCallback(e) {\n    if (e.playedSeconds > 10 && e.playedSeconds < 11) {\n      var _videos = _toConsumableArray(state.videos);\n\n      var playedVideo = _videos.find(function (video) {\n        return video.id === state.activeVideo.id;\n      });\n\n      playedVideo.played = true;\n      setState(function (prevState) {\n        return _objectSpread({}, prevState, {\n          videos: _videos\n        });\n      }); // setState({\n      //   ...state,\n      //   videos: state.videos.map( element => {\n      //     return element.id === state.activeVideo.id\n      //     ? { ...element, played: true }\n      //     : element;\n      //   })\n      // });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: state.nightMode ? theme : themeLight,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, state.videos !== null ? /*#__PURE__*/React.createElement(StyledWbnPlayer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Video, {\n    active: state.activeVideo,\n    autoplay: state.autoplay,\n    endCallback: endCallback,\n    progressCallback: progressCallback,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Playlist, {\n    videos: state.videos,\n    active: state.activeVideo,\n    nightModeCallback: nightModeCallback,\n    nightMode: state.nightMode,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  })) : null);\n};\n\nexport default WbnPlayer;","map":{"version":3,"sources":["C:/Users/DELL/Downloads/React Projects/React-Player/React-Hooks-StarterFiles 4/react-hooks-videoplayer-FINISHED/src/components/containers/WbnPlayer.js"],"names":["React","useState","useEffect","ThemeProvider","Video","Playlist","StyledWbnPlayer","theme","bgcolor","bgcolorItem","bgcolorItemActive","bgcolorPlayed","border","borderPlayed","color","themeLight","WbnPlayer","props","videos","JSON","parse","document","querySelector","value","savedState","localStorage","getItem","playlistId","playlist","activeVideo","nightMode","autoplay","state","setState","setItem","stringify","console","log","videoId","match","params","undefined","newActiveVideo","findIndex","video","id","prev","location","history","push","pathname","nightModeCallback","prevState","endCallback","currentVideoIndex","nextVideo","length","progressCallback","e","playedSeconds","playedVideo","find","played"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport Video from '../Video';\nimport Playlist from '../containers/Playlist';\nimport StyledWbnPlayer from '../styles/StyledWbnPlayer';\n\nconst theme = {\n  bgcolor: '#353535',\n  bgcolorItem: '#414141',\n  bgcolorItemActive: '#405c63',\n  bgcolorPlayed: '#526d4e',\n  border: 'none',\n  borderPlayed: 'none',\n  color: '#fff',\n};\n\nconst themeLight = {\n  bgcolor: '#fff',\n  bgcolorItem: '#fff',\n  bgcolorItemActive: '#80a7b1',\n  bgcolorPlayed: '#7d9979',\n  border: '1px solid #353535',\n  borderPlayed: 'none',\n  color: '#353535',\n};\n\nconst WbnPlayer = props => {\n  const videos = JSON.parse(document.querySelector('[name=\"videos\"]').value);\n  const savedState = JSON.parse(localStorage.getItem(`${videos.playlistId}`));\n\n  const [state, setState] = useState({\n    videos: savedState ? savedState.videos : videos.playlist,\n    activeVideo: savedState ? savedState.activeVideo : videos.playlist[0],\n    nightMode: savedState ? savedState.nightMode : true,\n    playlistId: savedState ? savedState.playlistId : videos.playlistId,\n    autoplay: false,\n  });\n\n  useEffect(() => {\n    localStorage.setItem(`${state.playlistId}`, JSON.stringify({ ...state }));\n  }, [state]);\n\n  useEffect(() => {\n    console.log('test');\n    const videoId = props.match.params.activeVideo;\n    if (videoId !== undefined) {\n      const newActiveVideo = state.videos.findIndex(\n        video => video.id === videoId,\n      );\n      setState(prev => ({\n        ...prev,\n        activeVideo: prev.videos[newActiveVideo],\n        autoplay: props.location.autoplay,\n      }));\n    } else {\n      props.history.push({\n        pathname: `/${state.activeVideo.id}`,\n        autoplay: false,\n      });\n    }\n  }, [\n    props.history,\n    props.location.autoplay,\n    props.match.params.activeVideo,\n    state.activeVideo.id,\n    state.videos,\n  ]);\n\n  const nightModeCallback = () => {\n    setState(prevState => ({ ...prevState, nightMode: !prevState.nightMode }));\n  };\n\n  const endCallback = () => {\n    const videoId = props.match.params.activeVideo;\n    const currentVideoIndex = state.videos.findIndex(\n      video => video.id === videoId,\n    );\n\n    const nextVideo =\n      currentVideoIndex === state.videos.length - 1 ? 0 : currentVideoIndex + 1;\n\n    props.history.push({\n      pathname: `${state.videos[nextVideo].id}`,\n      autoplay: false,\n    });\n  };\n\n  const progressCallback = e => {\n    if (e.playedSeconds > 10 && e.playedSeconds < 11) {\n      const videos = [...state.videos];\n      const playedVideo = videos.find(\n        video => video.id === state.activeVideo.id,\n      );\n      playedVideo.played = true;\n\n      setState(prevState => ({ ...prevState, videos }));\n\n      // setState({\n      //   ...state,\n      //   videos: state.videos.map( element => {\n      //     return element.id === state.activeVideo.id\n      //     ? { ...element, played: true }\n      //     : element;\n      //   })\n      // });\n    }\n  };\n\n  return (\n    <ThemeProvider theme={state.nightMode ? theme : themeLight}>\n      {state.videos !== null ? (\n        <StyledWbnPlayer>\n          <Video\n            active={state.activeVideo}\n            autoplay={state.autoplay}\n            endCallback={endCallback}\n            progressCallback={progressCallback}\n          />\n          <Playlist\n            videos={state.videos}\n            active={state.activeVideo}\n            nightModeCallback={nightModeCallback}\n            nightMode={state.nightMode}\n          />\n        </StyledWbnPlayer>\n      ) : null}\n    </ThemeProvider>\n  );\n};\n\nexport default WbnPlayer;\n"]},"metadata":{},"sourceType":"module"}